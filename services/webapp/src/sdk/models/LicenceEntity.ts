/* tslint:disable */
/* eslint-disable */
/**
 * Open Dossard
 * Documentation de l\'API Open Dossard
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@opendossard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LicenceEntity
 */
export interface LicenceEntity {
    /**
     * 
     * @type {number}
     * @memberof LicenceEntity
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof LicenceEntity
     */
    licenceNumber: string;
    /**
     * 
     * @type {string}
     * @memberof LicenceEntity
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof LicenceEntity
     */
    firstName: string;
    /**
     * 
     * @type {string}
     * @memberof LicenceEntity
     */
    gender: string;
    /**
     * 
     * @type {string}
     * @memberof LicenceEntity
     */
    club: string;
    /**
     * 
     * @type {string}
     * @memberof LicenceEntity
     */
    dept: string;
    /**
     * 
     * @type {string}
     * @memberof LicenceEntity
     */
    birthYear: string;
    /**
     * 
     * @type {string}
     * @memberof LicenceEntity
     */
    catea: string;
    /**
     * 
     * @type {string}
     * @memberof LicenceEntity
     */
    catev: string;
    /**
     * 
     * @type {string}
     * @memberof LicenceEntity
     */
    fede: LicenceEntityFedeEnum;
}

export function LicenceEntityFromJSON(json: any): LicenceEntity {
    return LicenceEntityFromJSONTyped(json, false);
}

export function LicenceEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): LicenceEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'licenceNumber': json['licenceNumber'],
        'name': json['name'],
        'firstName': json['firstName'],
        'gender': json['gender'],
        'club': json['club'],
        'dept': json['dept'],
        'birthYear': json['birthYear'],
        'catea': json['catea'],
        'catev': json['catev'],
        'fede': json['fede'],
    };
}

export function LicenceEntityToJSON(value?: LicenceEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'licenceNumber': value.licenceNumber,
        'name': value.name,
        'firstName': value.firstName,
        'gender': value.gender,
        'club': value.club,
        'dept': value.dept,
        'birthYear': value.birthYear,
        'catea': value.catea,
        'catev': value.catev,
        'fede': value.fede,
    };
}

/**
* @export
* @enum {string}
*/
export enum LicenceEntityFedeEnum {
    FSGT = 'FSGT',
    UFOLEP = 'UFOLEP',
    FFC = 'FFC',
    CYCLOS = 'CYCLOS',
    FFVELO = 'FFVELO',
    NL = 'NL'
}


