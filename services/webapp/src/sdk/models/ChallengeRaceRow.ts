/* tslint:disable */
/* eslint-disable */
/**
 * Open Dossard
 * Documentation de l\'API Open Dossard
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@opendossard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ChallengeRaceRow
 */
export interface ChallengeRaceRow {
    /**
     * 
     * @type {string}
     * @memberof ChallengeRaceRow
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRaceRow
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRaceRow
     */
    competitionName?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRaceRow
     */
    club?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRaceRow
     */
    catev?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRaceRow
     */
    catea?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRaceRow
     */
    dept?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRaceRow
     */
    fede?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRaceRow
     */
    gender?: string;
    /**
     * 
     * @type {number}
     * @memberof ChallengeRaceRow
     */
    rankingScratch?: number;
    /**
     * 
     * @type {number}
     * @memberof ChallengeRaceRow
     */
    competitionId?: number;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRaceRow
     */
    comment?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRaceRow
     */
    eventDate?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ChallengeRaceRow
     */
    sprintchallenge?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRaceRow
     */
    licenceId?: string;
    /**
     * 
     * @type {number}
     * @memberof ChallengeRaceRow
     */
    ptsRace?: number;
    /**
     * 
     * @type {number}
     * @memberof ChallengeRaceRow
     */
    nbParticipants?: number;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRaceRow
     */
    explanation?: string;
}

export function ChallengeRaceRowFromJSON(json: any): ChallengeRaceRow {
    return ChallengeRaceRowFromJSONTyped(json, false);
}

export function ChallengeRaceRowFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChallengeRaceRow {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'competitionName': !exists(json, 'competitionName') ? undefined : json['competitionName'],
        'club': !exists(json, 'club') ? undefined : json['club'],
        'catev': !exists(json, 'catev') ? undefined : json['catev'],
        'catea': !exists(json, 'catea') ? undefined : json['catea'],
        'dept': !exists(json, 'dept') ? undefined : json['dept'],
        'fede': !exists(json, 'fede') ? undefined : json['fede'],
        'gender': !exists(json, 'gender') ? undefined : json['gender'],
        'rankingScratch': !exists(json, 'rankingScratch') ? undefined : json['rankingScratch'],
        'competitionId': !exists(json, 'competitionId') ? undefined : json['competitionId'],
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
        'eventDate': !exists(json, 'eventDate') ? undefined : json['eventDate'],
        'sprintchallenge': !exists(json, 'sprintchallenge') ? undefined : json['sprintchallenge'],
        'licenceId': !exists(json, 'licenceId') ? undefined : json['licenceId'],
        'ptsRace': !exists(json, 'ptsRace') ? undefined : json['ptsRace'],
        'nbParticipants': !exists(json, 'nbParticipants') ? undefined : json['nbParticipants'],
        'explanation': !exists(json, 'explanation') ? undefined : json['explanation'],
    };
}

export function ChallengeRaceRowToJSON(value?: ChallengeRaceRow | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'firstName': value.firstName,
        'competitionName': value.competitionName,
        'club': value.club,
        'catev': value.catev,
        'catea': value.catea,
        'dept': value.dept,
        'fede': value.fede,
        'gender': value.gender,
        'rankingScratch': value.rankingScratch,
        'competitionId': value.competitionId,
        'comment': value.comment,
        'eventDate': value.eventDate,
        'sprintchallenge': value.sprintchallenge,
        'licenceId': value.licenceId,
        'ptsRace': value.ptsRace,
        'nbParticipants': value.nbParticipants,
        'explanation': value.explanation,
    };
}


