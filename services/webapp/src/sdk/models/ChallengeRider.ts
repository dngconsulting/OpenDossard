/* tslint:disable */
/* eslint-disable */
/**
 * Open Dossard
 * Documentation de l\'API Open Dossard
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@opendossard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ChallengeRaceRow,
    ChallengeRaceRowFromJSON,
    ChallengeRaceRowFromJSONTyped,
    ChallengeRaceRowToJSON,
} from './';

/**
 * 
 * @export
 * @interface ChallengeRider
 */
export interface ChallengeRider {
    /**
     * 
     * @type {string}
     * @memberof ChallengeRider
     */
    licenceId?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRider
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRider
     */
    gender?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRider
     */
    firstName?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRider
     */
    catev?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRider
     */
    catea?: string;
    /**
     * 
     * @type {Array<ChallengeRaceRow>}
     * @memberof ChallengeRider
     */
    challengeRaceRows?: Array<ChallengeRaceRow>;
    /**
     * 
     * @type {number}
     * @memberof ChallengeRider
     */
    ptsAllRaces?: number;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRider
     */
    currentLicenceCatev?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRider
     */
    currentLicenceCatea?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRider
     */
    currentClub?: string;
    /**
     * 
     * @type {string}
     * @memberof ChallengeRider
     */
    explanation?: string;
}

export function ChallengeRiderFromJSON(json: any): ChallengeRider {
    return ChallengeRiderFromJSONTyped(json, false);
}

export function ChallengeRiderFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChallengeRider {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'licenceId': !exists(json, 'licenceId') ? undefined : json['licenceId'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'gender': !exists(json, 'gender') ? undefined : json['gender'],
        'firstName': !exists(json, 'firstName') ? undefined : json['firstName'],
        'catev': !exists(json, 'catev') ? undefined : json['catev'],
        'catea': !exists(json, 'catea') ? undefined : json['catea'],
        'challengeRaceRows': !exists(json, 'challengeRaceRows') ? undefined : ((json['challengeRaceRows'] as Array<any>).map(ChallengeRaceRowFromJSON)),
        'ptsAllRaces': !exists(json, 'ptsAllRaces') ? undefined : json['ptsAllRaces'],
        'currentLicenceCatev': !exists(json, 'currentLicenceCatev') ? undefined : json['currentLicenceCatev'],
        'currentLicenceCatea': !exists(json, 'currentLicenceCatea') ? undefined : json['currentLicenceCatea'],
        'currentClub': !exists(json, 'currentClub') ? undefined : json['currentClub'],
        'explanation': !exists(json, 'explanation') ? undefined : json['explanation'],
    };
}

export function ChallengeRiderToJSON(value?: ChallengeRider | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'licenceId': value.licenceId,
        'name': value.name,
        'gender': value.gender,
        'firstName': value.firstName,
        'catev': value.catev,
        'catea': value.catea,
        'challengeRaceRows': value.challengeRaceRows === undefined ? undefined : ((value.challengeRaceRows as Array<any>).map(ChallengeRaceRowToJSON)),
        'ptsAllRaces': value.ptsAllRaces,
        'currentLicenceCatev': value.currentLicenceCatev,
        'currentLicenceCatea': value.currentLicenceCatea,
        'currentClub': value.currentClub,
        'explanation': value.explanation,
    };
}


