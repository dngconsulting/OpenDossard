/* tslint:disable */
/* eslint-disable */
/**
 * Open Dossard
 * Documentation de l\'API Open Dossard
 *
 * The version of the OpenAPI document: 1.0
 * Contact: contact@opendossard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Departement,
    DepartementFromJSON,
    DepartementFromJSONTyped,
    DepartementToJSON,
} from './';

/**
 * 
 * @export
 * @interface CompetitionFilter
 */
export interface CompetitionFilter {
    /**
     * 
     * @type {Array<string>}
     * @memberof CompetitionFilter
     */
    competitionTypes?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CompetitionFilter
     */
    fedes?: Array<string>;
    /**
     * 
     * @type {Array<Departement>}
     * @memberof CompetitionFilter
     */
    depts?: Array<Departement>;
    /**
     * 
     * @type {boolean}
     * @memberof CompetitionFilter
     */
    openedToOtherFede?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CompetitionFilter
     */
    openedNL?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CompetitionFilter
     */
    displayFuture?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof CompetitionFilter
     */
    displayPast?: boolean;
    /**
     * 
     * @type {number}
     * @memberof CompetitionFilter
     */
    displaySince?: number;
    /**
     * 
     * @type {string}
     * @memberof CompetitionFilter
     */
    startDate?: string;
    /**
     * 
     * @type {string}
     * @memberof CompetitionFilter
     */
    endDate?: string;
}

export function CompetitionFilterFromJSON(json: any): CompetitionFilter {
    return CompetitionFilterFromJSONTyped(json, false);
}

export function CompetitionFilterFromJSONTyped(json: any, ignoreDiscriminator: boolean): CompetitionFilter {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'competitionTypes': !exists(json, 'competitionTypes') ? undefined : json['competitionTypes'],
        'fedes': !exists(json, 'fedes') ? undefined : json['fedes'],
        'depts': !exists(json, 'depts') ? undefined : ((json['depts'] as Array<any>).map(DepartementFromJSON)),
        'openedToOtherFede': !exists(json, 'openedToOtherFede') ? undefined : json['openedToOtherFede'],
        'openedNL': !exists(json, 'openedNL') ? undefined : json['openedNL'],
        'displayFuture': !exists(json, 'displayFuture') ? undefined : json['displayFuture'],
        'displayPast': !exists(json, 'displayPast') ? undefined : json['displayPast'],
        'displaySince': !exists(json, 'displaySince') ? undefined : json['displaySince'],
        'startDate': !exists(json, 'startDate') ? undefined : json['startDate'],
        'endDate': !exists(json, 'endDate') ? undefined : json['endDate'],
    };
}

export function CompetitionFilterToJSON(value?: CompetitionFilter | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'competitionTypes': value.competitionTypes,
        'fedes': value.fedes,
        'depts': value.depts === undefined ? undefined : ((value.depts as Array<any>).map(DepartementToJSON)),
        'openedToOtherFede': value.openedToOtherFede,
        'openedNL': value.openedNL,
        'displayFuture': value.displayFuture,
        'displayPast': value.displayPast,
        'displaySince': value.displaySince,
        'startDate': value.startDate,
        'endDate': value.endDate,
    };
}


